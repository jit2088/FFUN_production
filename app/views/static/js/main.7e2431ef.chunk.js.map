{"version":3,"sources":["http-common.js","services/CarService.js","components/AddCar.js","components/Car.js","components/CarList.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","CarService","getAll","http","get","id","data","post","update","put","remove","delete","removeAll","findByMake","make","AddCar","initialCarState","model","year","price","status","useState","car","setCar","submitted","setSubmitted","handleInputChange","event","target","name","value","className","onClick","htmlFor","type","required","onChange","CarDataService","then","response","console","log","catch","e","Car","props","currentCar","setCurrentCar","message","setMessage","useEffect","match","params","history","push","CarsList","cars","setCars","searchMake","setSearchMake","carsRef","useRef","current","retrieveCars","openCar","rowIndex","deleteCar","newCars","splice","columns","useMemo","Header","accessor","Cell","rowIdx","row","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","filter","obj","length","xLabels","yValues","width","height","options","fillColor","strokeColor","scaleFontSize","scaleFontStyle","placeholder","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","App","href","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e2431ef.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/cars\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return http.get(`/cars/${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return http.post(\"/cars\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/cars/${id}`, data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return http.delete(`/cars/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/cars`);\r\n};\r\n\r\nconst findByMake = (make) => {\r\n  return http.get(`/cars?make=${make}`);\r\n};\r\n\r\nconst CarService = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findByMake,\r\n};\r\n\r\nexport default CarService;\r\n","import React, { useState } from \"react\";\r\nimport CarDataService from \"../services/CarService\";\r\n\r\nconst AddCar = () => {\r\n  const initialCarState = {\r\n    id: null,\r\n    make: \"\",\r\n    model: \"\",\r\n    year: 0,\r\n    price: 0,\r\n    status: \"Live\"\r\n  };\r\n  const [car, setCar] = useState(initialCarState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCar({ ...car, [name]: value });\r\n  };\r\n\r\n  const saveCar = () => {\r\n    var data = {\r\n      make: car.make,\r\n      model: car.model,\r\n      year: car.year,\r\n      price: car.price,\r\n      status: car.status\r\n    };\r\n\r\n   CarDataService.create(data)\r\n      .then(response => {\r\n        setCar({\r\n          id: response.data.id,\r\n          make: response.data.make,\r\n          model: response.data.model,\r\n          year: response.data.year,\r\n          price: response.data.price,\r\n          status: response.data.status\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newCar = () => {\r\n    setCar(initialCarState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newCar}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"make\">Make</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"make\"\r\n              required\r\n              value={car.make}\r\n              onChange={handleInputChange}\r\n              name=\"make\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"model\">Model</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"model\"\r\n              required\r\n              value={car.model}\r\n              onChange={handleInputChange}\r\n              name=\"model\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"year\">Year</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"year\"\r\n              required\r\n              value={car.year}\r\n              onChange={handleInputChange}\r\n              name=\"year\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"price\"\r\n              required\r\n              value={car.price}\r\n              onChange={handleInputChange}\r\n              name=\"price\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"status\">Status</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"status\"\r\n              required\r\n              value={car.status}\r\n              onChange={handleInputChange}\r\n              name=\"status\"\r\n            />\r\n          </div>\r\n\r\n          <button onClick={saveCar} className=\"btn btn-success\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CarDataService from \"../services/CarService\";\r\n\r\nconst Car = props => {\r\n  const initialCarState = {\r\n    id: null,\r\n    make: \"\",\r\n    model: \"\",\r\n    year: 0,\r\n    price: 0,\r\n    status: \"Live\"\r\n  };\r\n  const [currentCar, setCurrentCar] = useState(initialCarState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getCar = id => {\r\n    CarDataService.get(id)\r\n      .then(response => {\r\n        setCurrentCar(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCar(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentCar({ ...currentCar, [name]: value });\r\n  };\r\n\r\n  // const updatePublished = status => {\r\n  //   var data = {\r\n  //     id: currentCar.id,\r\n  //     make: currentCar.make,\r\n  //     model: currentCar.model,\r\n  //     year: currentCar.year,\r\n  //     price: currentCar.price,\r\n  //     status: currentCar.status\r\n  //   };\r\n\r\n  //   CarDataService.update(currentCar.id, data)\r\n  //     .then(response => {\r\n  //       setCurrentCar({ ...currentCar, published: status });\r\n  //       console.log(response.data);\r\n  //       setMessage(\"The status was updated successfully!\");\r\n  //     })\r\n  //     .catch(e => {\r\n  //       console.log(e);\r\n  //     });\r\n  // };\r\n\r\n  const updateCar = () => {\r\n    CarDataService.update(currentCar.id, currentCar)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The Car was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteCar = () => {\r\n    CarDataService.remove(currentCar.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        props.history.push(\"/cars\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentCar ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Car</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"make\">Make</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"make\"\r\n                name=\"make\"\r\n                value={currentCar.make}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"model\">Model</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"model\"\r\n                name=\"model\"\r\n                value={currentCar.model}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"year\">Year</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"year\"\r\n                name=\"year\"\r\n                value={currentCar.year}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n                value={currentCar.year}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"status\">Status</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"status\"\r\n                name=\"status\"\r\n                value={currentCar.status}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            {/* <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status:   </strong>\r\n              </label>\r\n              {currentCar.sold ? \"Sold\" : \"Available\"}\r\n            </div> */}\r\n          </form>\r\n\r\n          {/* {currentCar.published ? (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => updatePublished(false)}\r\n            >\r\n              Available\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => updatePublished(true)}\r\n            >\r\n              Status\r\n            </button>\r\n          )} */}\r\n\r\n          <button className=\"badge badge-danger mr-2\" onClick={deleteCar}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={updateCar}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Car...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Car;\r\n","import React, { useState, useEffect, useMemo, useRef, component } from \"react\";\r\nimport CarDataService from \"../services/CarService\";\r\nimport { useTable } from \"react-table\";\r\nimport Histogram from 'react-chart-histogram';\r\n//import Histogram_local from \"./Histogram_local\";\r\n\r\n// import { Histogram } from 'graphics-canvas';\r\n// import 'graphics-canvas/src/piechart.scss' ;// optional if you`ll use your css\r\n\r\nconst CarsList = (props) => {\r\n  const [cars, setCars] = useState([]);\r\n  const [searchMake, setSearchMake] = useState(\"\");\r\n\r\n  const carsRef = useRef();\r\n\r\n  carsRef.current = cars;\r\n\r\n  useEffect(() => {\r\n    retrieveCars();\r\n  }, []);\r\n\r\n  const onChangeSearchMake = (e) => {\r\n    const searchMake = e.target.value;\r\n    setSearchMake(searchMake);\r\n  };\r\n\r\n  const retrieveCars = () => {\r\n    CarDataService.getAll()\r\n      .then((response) => {\r\n        console.log(\"line 28 from CarList.js \", response.data);\r\n        setCars(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveCars();\r\n  };\r\n\r\n  const removeAllCars = () => {\r\n    CarDataService.removeAll()\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByMake = () => {\r\n    CarDataService.findByMake(searchMake)\r\n      .then((response) => {\r\n        setCars(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const openCar = (rowIndex) => {\r\n    const id = carsRef.current[rowIndex].id;\r\n\r\n    props.history.push(\"/cars/\" + id);\r\n  };\r\n\r\n  const deleteCar = (rowIndex) => {\r\n    const id = carsRef.current[rowIndex].id;\r\n\r\n    CarDataService.remove(id)\r\n      .then((response) => {\r\n        props.history.push(\"/cars\");\r\n\r\n        let newCars = [...carsRef.current];\r\n        newCars.splice(rowIndex, 1);\r\n\r\n        setCars(newCars);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Make\",\r\n        accessor: \"make\",\r\n      },\r\n      {\r\n        Header: \"Model\",\r\n        accessor: \"model\",\r\n      },\r\n      {\r\n        Header: \"Year\",\r\n        accessor: \"year\",\r\n      },\r\n      {\r\n        Header: \"Price\",\r\n        accessor: \"price\",\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"status\",\r\n      },\r\n      {\r\n        Header: \"Actions\",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n          const rowIdx = props.row.id;\r\n          return (\r\n            <div>\r\n              <span onClick={() => openCar(rowIdx)}>\r\n                <i className=\"far fa-edit action mr-2\"></i>\r\n              </span>\r\n\r\n              <span onClick={() => deleteCar(rowIdx)}>\r\n                <i className=\"fas fa-trash action\"></i>\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data: cars,\r\n  });\r\n\r\n  console.log(\"line 139 of CarList.js  \", cars);\r\n  // from 'cars', count by status='Live' or 'Sold', save to const data = []\r\n\r\n  const countSold = cars.filter((obj) => obj.status === 'Sold').length;\r\n  const countLive = cars.filter((obj) => obj.status === 'Live').length;\r\n\r\n  // console.log(\"countSold, countLive\", countSold, countLive)\r\n\r\n  const labels = ['Sold', 'Live'];\r\n  const data = [countSold, countLive];\r\n  // const data = [50,100];\r\n  // const options = { fillColor: '#FFFFFF', strokeColor: '#0000FF' };\r\nconst options = { fillColor: '#314deb', strokeColor: '#0000FF', scaleFontSize: 12, scaleFontStyle: \"bold\" };\r\n  \r\n\r\n  //************************************************************************ \r\n  //************************************************************************ */\r\n  \r\n  // const data = [\r\n  //   {\r\n  //     label: 'Sold',\r\n  //     values: [\r\n  //       {\r\n  //         title: 'Sold',\r\n  //         count: countSold\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   {\r\n  //     label: 'Live',\r\n  //     values: [\r\n  //       {\r\n  //         title: 'Live',\r\n  //         count: countLive\r\n  //       }\r\n  //     ]\r\n  //   }\r\n  // ]\r\n\r\n  // // You can provide colors or it`ll be by default\r\n  // const colors = [\r\n  //   '#00B275'\r\n  // ]\r\n\r\n\r\n\r\n\r\n\r\n  //************************************************************************ */\r\n\r\n  return (\r\n    //console.log(\"out........\",retrieveCars ),\r\n    <div>\r\n      <div>\r\n        <Histogram\r\n          xLabels={labels}\r\n          yValues={data}\r\n          width='400'\r\n          height='200'\r\n          options={options}\r\n        />\r\n        </div>\r\n      {/* <div>\r\n        <Histogram\r\n          containerClass={\"histogramContainer\"} // Histogram container class (optional)\r\n          colors={colors} // Provide you colors (optional)\r\n          background={'White'} // Background color (optional)\r\n          data={data} // Data (required)\r\n          range={0} // Bodred-radius of columns (optional)\r\n          columnWidth={200} // Column width (optional)\r\n          columnMargin={5} // Column margin (optional)\r\n          fontFamily={'Arial'} // Font family (you need link font in your css)\r\n          fontSize={14} // Text font size\r\n        />\r\n      </div> */}\r\n\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by make\"\r\n              value={searchMake}\r\n              onChange={onChangeSearchMake}\r\n            />\r\n\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={findByMake}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 list\">\r\n          <table\r\n            className=\"table table-striped table-bordered\"\r\n            {...getTableProps()}\r\n          >\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th {...column.getHeaderProps()}>\r\n                      {column.render(\"Header\")}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {rows.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n\r\n};\r\n\r\nexport default CarsList;\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport \"@fortawesome/fontawesome-free/js/all.js\";\r\nimport \"./App.css\";\r\n\r\nimport AddCar from \"./components/AddCar\";\r\nimport Car from \"./components/Car\";\r\nimport CarsList from \"./components/CarList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <a href=\"/cars\" className=\"navbar-brand\">\r\n          FFUN\r\n        </a>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/cars\"} className=\"nav-link\">\r\n              Cars\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/add\"} className=\"nav-link\">\r\n              Add Cars\r\n            </Link>\r\n          </li>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/cars\"]} component={CarsList} />\r\n          <Route exact path=\"/add\" component={AddCar} />\r\n          <Route path=\"/cars/:id\" component={Car} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}